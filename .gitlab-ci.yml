variables:
   PYTHON_VERSION: "3.11"

workflow:
  rules:
    # Switch between branch pipelines and merge request pipelines to ensure that all checks must
    # pass before merging (see also https://gitlab.com/gitlab-org/gitlab/-/issues/385841)
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

stages:
  - initialization
  - testing

##################
# Initialization #
##################

.setup_python_venv: &setup_python_venv
    - python$PYTHON_VERSION -m venv .venv$PYTHON_VERSION
    - . .venv$PYTHON_VERSION/bin/activate
    - python -m pip install --upgrade pip wheel
    - make install_devel

setup:
  services:
     - image:recordflux
     - cpu:2
     - mem:4
  stage: initialization
  artifacts:
    paths:
      - .venv$PYTHON_VERSION
  script:
    - *setup_python_venv

###########
# Testing #
###########

.setup_python: &setup_python
    - . .venv$PYTHON_VERSION/bin/activate

.test:
  stage: testing
  dependencies:
    - setup

commit_messages:
  extends: .test
  services:
     - image:recordflux
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - *setup_python
    - git fetch origin main
    - check_commit_messages origin/main..HEAD

checks:
  extends: .test
  services:
     - image:recordflux
     - cpu:2
     - mem:4
  script:
    - *setup_python
    - make check
    - make test
